this line will be an error with the comment sectioned out  # this is a comment
                          # white space should rly be ignored
                          
[section]
[section with white space is illegal]
[] # empty section is illegal
[sectionwith#isillegal]
[section:subsection] # each subsection must be inside an already valid section
[sectio with spaces:subsection]
[stuff: wtih spaces]

[stuff:] # empty subsection 
[:] # both empty section and subsection
[we,rdcahracter] # special characters not allowed

key="

key="st#uff"
key=""""
key="#"

key="string" # regular string
key=123 # integer
key=123.f # float
key=true # boolean true
key=false # boolean false

key=123.asdf # malformed float

key={"stuff";"more"} # list of strings
key={true;false} # list of booleans
key={123;345} # list of ints
key={123.f;145.001f} # list of floats

# test some invalid types + invalid array types =========== do it

key= 123 # with whitespace after =
key =123 # with whitespace before =
key = 123 # with whitespace before and after =

key=12asdvdfas # invalid type
key=tresau # invalid type
key=TRUE # uppercase boolean
key={ 123.f; 123.0001f    } # white space everywhere
key={} # empty array
key={123} # one element
asdf  asdfsa dfsa    dfsad   afsga # garbage data again
key= {1234}
key={123.f; 213.f} # spaces after the semicolon
key={123,123} # usage of , instead of ;
key={ # unclosed array 
key={0123} # incorrect integer
key={123asd} # invalid data inside an array 
key={123asdf} # this should not give a floating point
key={123;"hello"} # inconsistent types inside the array

# handle the key as well
"key="stuff" # special characters are not allowed
key213="asdf" # digits are allowed for keys
key{="stuff" # another special character

         stuff="otherstuff" # whitesapace at the start


# Here test with some actual data so that you can query it later

# valid sectioning
[test]

[test:subtest]

key1="some string"


# invalid sectioning

[test123]
[broken:subtest]
